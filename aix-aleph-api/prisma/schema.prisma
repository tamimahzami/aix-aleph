generator client {
  provider = "prisma-client-js"
}

datasource db {
  // ðŸ‘‰ Wenn du (vorÃ¼bergehend) SQLite nutzen willst:
  // provider = "sqlite"
  // url      = "file:./prisma/dev.db"

  // ðŸ‘‰ FÃ¼r Postgres (empfohlen):
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Experiment {
  id             String   @id @default(cuid())
  name           String
  description    String?
  type           String   @default("AB")       // z.B. "AB"
  status         String   @default("DRAFT")    // z.B. "DRAFT" | "RUNNING" | ...
  strategy       String   @default("FIXED")    // z.B. "FIXED"
  startTime      DateTime?
  endTime        DateTime?
  notes          String?
  decision       String?
  decisionReason String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  arms    Arm[]
  metrics Metric[]

  @@index([status])
  @@index([createdAt])
}

model Arm {
  id           String     @id @default(cuid())
  name         String
  aiModelId    String?
  weight       Float      @default(0.5)   // Standard-Gewichtung 50 %
  initialSplit Float      @default(0.0)   // Standard-Startsplit 0 %, kann Ã¼berschrieben werden
  minSplit     Float?
  maxSplit     Float?
  isChampion   Boolean    @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  experimentId String
  experiment   Experiment @relation(fields: [experimentId], references: [id], onDelete: Cascade)

  @@index([experimentId])
  @@unique([experimentId, name]) // keine doppelten Arm-Namen pro Experiment
}

model Metric {
  id           String     @id @default(cuid())
  name         String
  value        Float
  timestamp    DateTime   @default(now())

  experimentId String
  experiment   Experiment @relation(fields: [experimentId], references: [id], onDelete: Cascade)

  @@index([experimentId, name])
  @@index([timestamp])
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
