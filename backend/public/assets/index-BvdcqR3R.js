(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const m of o.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&i(m)}).observe(document,{childList:!0,subtree:!0});function t(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(s){if(s.ep)return;s.ep=!0;const o=t(s);fetch(s.href,o)}})();const g="/api",u={async health(){try{return await(await fetch(`${g}/health`)).json()}catch{return{ok:!1}}},async list(){const e=await fetch(`${g}/experiments`);if(!e.ok)throw new Error("list failed");return e.json()},async create(){const e={name:"Smoke Demo",type:"AB",strategy:"FIXED",arms:[{name:"Champion",initialSplit:60,isChampion:!0},{name:"Challenger",initialSplit:40}]};return(await fetch(`${g}/experiments`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})).json()},async setRunning(e){return(await fetch(`${g}/experiments/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({status:"RUNNING",notes:"Started via UI"})})).json()},async remove(e){return(await fetch(`${g}/experiments/${e}`,{method:"DELETE"})).json()},async addMetric(e,r,t){return(await fetch(`${g}/experiments/${e}/metrics`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({key:String(r),value:Number(t)})})).json()}},f=e=>document.querySelector(e);function c(e,r={},t=[]){const i=document.createElement(e);return Object.entries(r).forEach(([s,o])=>{s==="class"?i.className=o:s.startsWith("on")&&typeof o=="function"?i.addEventListener(s.substring(2),o):o!=null&&i.setAttribute(s,o)}),(Array.isArray(t)?t:[t]).forEach(s=>{i.append(s instanceof Node?s:document.createTextNode(String(s)))}),i}function y(e,r="-"){const t=Number(e);return Number.isFinite(t)?t:r}function a(e,r="info"){console.log(`[${r}]`,e);const t=c("div",{class:`toast ${r}`},e);Object.assign(t.style,{position:"fixed",right:"12px",bottom:"12px",padding:"10px 12px",background:r==="error"?"#fdd":r==="success"?"#dfd":"#eee",color:"#222",border:"1px solid #ccc",borderRadius:"8px",zIndex:9999}),document.body.appendChild(t),setTimeout(()=>t.remove(),2200)}function w(e){const r=f("#backend-json")||f("#health-backend")||null;r&&(r.textContent=JSON.stringify(e,null,2))}function E(e){const r=(e==null?void 0:e.initialSplit)??(e==null?void 0:e.split)??(e==null?void 0:e.minSplit)??null,t=[];return e!=null&&e.name&&t.push(e.name),r!=null&&t.push(`aufgeteilt ${y(r)}%`),e!=null&&e.isChampion&&t.push("– Champion"),t.join(" ")}function b(e){return c("span",{class:"metric-badge"},`${e.key}: ${e.value}`)}function $(e){const r=f("#cards");if(r){if(r.innerHTML="",!e||e.length===0){r.append(c("div",{class:"empty"},"Keine Experimente vorhanden."));return}e.forEach(t=>{const i=(t.arms||[]).map(n=>c("li",{},E(n))),s=(t.metrics||[]).map(b),o=c("button",{class:"secondary",onclick:async()=>{try{const n=await u.addMetric(t.id,"ctr",.42);if(n!=null&&n.id||(n==null?void 0:n.ok)!==!1)a("Metrik hinzugefügt","success"),await h();else throw new Error((n==null?void 0:n.error)||"add metric failed")}catch(n){a(`Fehler: ${n.message}`,"error")}}},"+ ctr=0.42"),m=c("button",{onclick:async()=>{try{const n=await u.setRunning(t.id);if(n!=null&&n.id||(n==null?void 0:n.ok)!==!1)a("Status auf RUNNING gesetzt","success"),await h();else throw new Error((n==null?void 0:n.error)||"set running failed")}catch(n){a(`Fehler: ${n.message}`,"error")}}},"Set RUNNING"),d=c("button",{class:"danger",onclick:async()=>{if(confirm("Experiment wirklich löschen?"))try{const n=await u.remove(t.id);if((n==null?void 0:n.ok)===!1)throw new Error((n==null?void 0:n.error)||"delete failed");a("Experiment gelöscht","success"),await h()}catch(n){a(`Fehler: ${n.message}`,"error")}}},"Löschen"),l=[`ID: ${t.id}`,`Strategie: ${t.strategy??"-"}`,`${t.status??"-"} Entscheidung: ${t.decision??"UNDECIDED"}`].join("   "),p=c("div",{class:"card"},[c("div",{class:"card-head"},[c("h3",{},`${t.name} (${t.status||"DRAFT"})`),c("div",{class:"meta"},l)]),c("div",{class:"arms"},[c("ul",{},i.length?i:[c("li",{},"—")])]),c("div",{class:"metrics"},s.length?s:[]),c("div",{class:"actions-row"},[m,o,d])]);r.append(p)})}}async function h(){try{const e=await u.list();$(e)}catch(e){a(`Laden fehlgeschlagen: ${e.message}`,"error")}}async function N(){try{const e=await u.create();if(e!=null&&e.id||(e==null?void 0:e.ok)!==!1)a("Experiment erstellt","success"),await h();else throw new Error((e==null?void 0:e.error)||"create failed")}catch(e){a(`Fehler: ${e.message}`,"error")}}async function v(){try{const e=await u.list();if(!Array.isArray(e)||e.length===0)return;const r=new Map;for(const i of e)r.has(i.name)||r.set(i.name,[]),r.get(i.name).push(i);let t=0;for(const[,i]of r.entries()){if(i.length<=1)continue;const s=i.slice().sort((d,l)=>{const p=new Date(d.updatedAt||d.createdAt||0).getTime();return new Date(l.updatedAt||l.createdAt||0).getTime()-p}),o=s[0],m=s.slice(1);for(const d of m){const l=await u.remove(d.id);if((l==null?void 0:l.ok)===!1)throw new Error((l==null?void 0:l.error)||"delete failed");t++}}a(`Duplikate bereinigt: ${t} entfernt`,"success"),await h()}catch(e){a(`Bereinigung fehlgeschlagen: ${e.message}`,"error")}}async function k(){if(confirm("Wirklich ALLE Experimente löschen?"))try{const e=await u.list();for(const r of e||[]){const t=await u.remove(r.id);if((t==null?void 0:t.ok)===!1)throw new Error((t==null?void 0:t.error)||"delete failed")}a("Alle Experimente gelöscht","success"),await h()}catch(e){a(`Fehler: ${e.message}`,"error")}}function L(){const e=f("#form-metric"),r=f("#mf-exp"),t=f("#mf-key"),i=f("#mf-val");e&&e.addEventListener("submit",async s=>{var o,m;s.preventDefault();try{const d=(o=r==null?void 0:r.value)==null?void 0:o.trim(),l=(m=t==null?void 0:t.value)==null?void 0:m.trim(),p=Number(i==null?void 0:i.value);if(!d)throw new Error("Experiment-ID fehlt");if(!l)throw new Error("metrischer Key fehlt");if(!Number.isFinite(p))throw new Error("Wert muss Zahl sein");const n=await u.addMetric(d,l,p);if((n==null?void 0:n.ok)===!1)throw new Error((n==null?void 0:n.error)||"add metric failed");a("Metrik gespeichert","success"),e.reset(),await h()}catch(d){a(`Fehler: ${d.message}`,"error")}})}async function S(){var r,t,i,s;(r=f("#btn-create"))==null||r.addEventListener("click",N),(t=f("#btn-refresh"))==null||t.addEventListener("click",h),(i=f("#btn-dedupe"))==null||i.addEventListener("click",v),(s=f("#btn-delete-all"))==null||s.addEventListener("click",k),L();const e=await u.health();w(e),await h()}document.addEventListener("DOMContentLoaded",S);
